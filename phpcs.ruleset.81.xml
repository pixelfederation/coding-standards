<?xml version="1.0"?>
<ruleset name="PixelFederation">
  <!--
    Reviewed version of the tools
    =============================

    squizlabs/php_codesniffer: 3.7.2
    phpcompatibility/php-compatibility: 9.3.5
    slevomat/coding-standard: 8.12.1
  -->

  <description>PixelFederation ruleset for PHP 8.1.</description>

  <arg name="extensions" value="php"/>
  <arg name="tab-width" value="4"/>
  <arg name="colors"/>
  <arg value="sp"/>

  <config name="testVersion" value="8.1"/>
  <config name="php_version" value="80100"/>
  <config name="installed_paths" value="vendor/phpcompatibility/php-compatibility,vendor/slevomat/coding-standard"/>
  <exclude-pattern>tests/</exclude-pattern>

  <rule ref="PHPCompatibility"/>
  <rule ref="PSR1"/>
  <rule ref="PSR12"/>

  <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
  <rule ref="Generic.CodeAnalysis.EmptyPHPStatement"/>
  <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
  <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
  <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
  <rule ref="Generic.Files.EndFileNewline"/>
  <rule ref="Generic.Files.InlineHTML"/>
  <rule ref="Generic.Files.LineEndings"/>
  <rule ref="Generic.Files.LineLength">
    <properties>
      <property name="lineLimit" value="120"/>
      <property name="absoluteLineLimit" value="120"/>
    </properties>
  </rule>
  <rule ref="Generic.Files.OneObjectStructurePerFile"/>
  <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
  <rule ref="Generic.Formatting.SpaceAfterCast"/>
  <rule ref="Generic.Functions.CallTimePassByReference"/>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
  <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman">
    <properties>
      <property name="checkFunctions" value="true"/>
      <property name="checkClosures" value="false"/>
    </properties>
  </rule>
  <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
    <properties>
      <property name="strict" value="false"/>
    </properties>
  </rule>
  <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
  <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
  <rule ref="Generic.PHP.DeprecatedFunctions">
    <properties>
      <property name="error" value="false"/>
    </properties>
  </rule>
  <rule ref="Generic.PHP.DisallowAlternativePHPTags"/>
  <rule ref="Generic.PHP.DisallowRequestSuperglobal"/>
  <rule ref="Generic.PHP.DisallowShortOpenTag"/>
  <rule ref="Generic.PHP.DiscourageGoto"/>
  <rule ref="Generic.PHP.ForbiddenFunctions">
    <properties>
      <property name="error" value="false"/>
      <property name="forbiddenFunctions" type="array">
        <element key="sizeof" value="count"/>
        <element key="dump" value="null"/>
        <element key="dd" value="null"/>
        <element key="print_r" value="null"/>
        <element key="var_dump" value="null"/>
        <element key="eval" value="null"/>
        <element key="die" value="null"/>
        <element key="is_null" value="null"/>
        <element key="create_function" value="null"/>
      </property>
    </properties>
  </rule>
  <rule ref="Generic.PHP.LowerCaseConstant"/>
  <rule ref="Generic.PHP.LowerCaseKeyword"/>
  <rule ref="Generic.PHP.LowerCaseType"/>
  <rule ref="Generic.PHP.RequireStrictTypes"/>
  <rule ref="Generic.PHP.Syntax"/>
  <rule ref="Generic.Strings.UnnecessaryStringConcat">
    <properties>
      <property name="allowMultiline" value="true"/>
    </properties>
  </rule>
  <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing">
    <properties>
      <property name="ignoreNewlines" value="true"/>
    </properties>
  </rule>
  <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
  <rule ref="Generic.WhiteSpace.IncrementDecrementSpacing"/>
  <rule ref="Generic.WhiteSpace.LanguageConstructSpacing"/>
  <rule ref="Generic.WhiteSpace.ScopeIndent"/>
  <rule ref="Generic.WhiteSpace.SpreadOperatorSpacingAfter"/>

  <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
  <rule ref="Squiz.Arrays.ArrayDeclaration"/>
  <rule ref="Squiz.Classes.ClassDeclaration"/>
  <rule ref="Squiz.Classes.ClassFileName"/>
  <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
  <rule ref="Squiz.Classes.SelfMemberReference"/>
  <rule ref="Squiz.Classes.ValidClassName"/>
  <rule ref="Squiz.Commenting.BlockComment"/>
  <rule ref="Squiz.Commenting.DocCommentAlignment"/>
  <rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>  <!-- Naozaj treba mat v komentari throws tagy? -->
  <rule ref="Squiz.ControlStructures.ControlSignature">
    <properties>
      <property name="requiredSpacesBeforeColon" value="0"/>
    </properties>
  </rule>
  <rule ref="Squiz.ControlStructures.ElseIfDeclaration"/> <!-- Nie som si isty ci to vobec chceme elseif -> else if -->
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration">
    <properties>
      <property name="ignoreNewlines" value="true"/>
    </properties>
  </rule>
  <rule ref="Squiz.ControlStructures.InlineIfDeclaration"/>
  <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration"/>
  <rule ref="Squiz.Formatting.OperatorBracket"/>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
    <properties>
      <property name="equalsSpacing" value="1"/>
    </properties>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclaration">
    <properties>
      <property name="ignoreComments" value="true"/>
    </properties>
  </rule>
  <rule ref="Squiz.Functions.FunctionDuplicateArgument"/>
  <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>
  <rule ref="Squiz.NamingConventions.ValidFunctionName"/>
  <rule ref="Squiz.NamingConventions.ValidVariableName"/>
  <rule ref="Squiz.Operators.ComparisonOperatorUsage"/>
  <rule ref="Squiz.Operators.IncrementDecrementUsage"/>
  <rule ref="Squiz.Operators.ValidLogicalOperators"/>
  <rule ref="Squiz.PHP.DisallowBooleanStatement"/>
  <rule ref="Squiz.PHP.DisallowComparisonAssignment"/>
  <rule ref="Squiz.PHP.DisallowMultipleAssignments"/>
  <rule ref="Squiz.PHP.EmbeddedPhp"/>
  <rule ref="Squiz.PHP.GlobalKeyword"/>
  <rule ref="Squiz.PHP.InnerFunctions"/>
  <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
  <rule ref="Squiz.PHP.NonExecutableCode"/>
  <rule ref="Squiz.Scope.MemberVarScope"/>
  <rule ref="Squiz.Scope.MethodScope"/>
  <rule ref="Squiz.Scope.StaticThisUsage"/>
  <rule ref="Squiz.Strings.ConcatenationSpacing">
    <properties>
      <property name="spacing" value="1"/>
      <property name="ignoreNewlines" value="true"/>
    </properties>
  </rule>
  <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
  <rule ref="Squiz.Strings.EchoedStrings"/>
  <rule ref="Squiz.WhiteSpace.CastSpacing"/>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
  <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace"/>
  <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>
  <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
  <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
  <rule ref="Squiz.WhiteSpace.MemberVarSpacing">
    <properties>
      <property name="spacing" value="0"/>
      <property name="spacingBeforeFirst" value="0"/>
    </properties>
  </rule>
  <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
    <properties>
      <property name="ignoreNewlines" value="true"/>
    </properties>
  </rule>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing">
    <properties>
      <property name="ignoreNewlines" value="true"/>
      <property name="ignoreSpacingBeforeAssignments" value="false"/>
    </properties>
  </rule>
  <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
  <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
  <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

  <rule ref="Zend.Files.ClosingTag"/>

  <rule ref="SlevomatCodingStandard.Arrays.AlphabeticallySortedByKeys"/>
  <rule ref="SlevomatCodingStandard.Arrays.ArrayAccess"/>
  <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
  <rule ref="SlevomatCodingStandard.Arrays.DisallowPartiallyKeyed"/>
  <rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement"/>
  <rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace">
    <properties>
      <property name="enableEmptyArrayCheck" value="true"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>
  <rule ref="SlevomatCodingStandard.Attributes.AttributeAndTargetSpacing"/>
  <rule ref="SlevomatCodingStandard.Attributes.DisallowAttributesJoining"/>
  <rule ref="SlevomatCodingStandard.Attributes.DisallowMultipleAttributesPerLine"/>
  <rule ref="SlevomatCodingStandard.Attributes.RequireAttributeAfterDocComment"/>
  <rule ref="SlevomatCodingStandard.Classes.BackedEnumTypeSpacing"/>
  <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>
  <rule ref="SlevomatCodingStandard.Classes.ClassLength">             <!-- Chceme obmedzovat dlzku class? -->
    <properties>
      <property name="maxLinesLength" value="250"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Classes.ClassMemberSpacing"/>
  <rule ref="SlevomatCodingStandard.Classes.ClassStructure">      <!-- checknite poradie, nerozlisoval som poradie final, static, atd -->
    <properties>
      <property name="groups" type="array">
        <element value="uses"/>

        <element value="enum cases"/>

        <element value="public constants"/>
        <element value="protected constants"/>
        <element value="private constants"/>

        <element value="public properties, public static properties"/>
        <element value="protected properties, protected static properties"/>
        <element value="private properties, private static properties"/>

        <element value="constructor"/>
        <element value="static constructors"/>
        <element value="destructor"/>

        <element value="all public methods"/>
        <element value="all protected methods"/>
        <element value="all private methods"/>

        <element value="magic methods"/>
      </property>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Classes.ConstantSpacing"/>
  <rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition"/>
  <rule ref="SlevomatCodingStandard.Classes.DisallowMultiPropertyDefinition"/>
  <rule ref="SlevomatCodingStandard.Classes.DisallowStringExpressionPropertyFetch"/>   <!-- Nie som si isty ci ano alebo nie -->
  <rule ref="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces">
    <properties>
      <property name="linesCountAfterOpeningBrace" value="0"/>
      <property name="linesCountBeforeClosingBrace" value="0"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Classes.EnumCaseSpacing"/>
  <rule ref="SlevomatCodingStandard.Classes.MethodSpacing"/>
  <rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference"/>
  <rule ref="SlevomatCodingStandard.Classes.ParentCallSpacing"/>              <!-- Nie som si isty ci ano alebo nie -->
  <rule ref="SlevomatCodingStandard.Classes.PropertyDeclaration">
    <properties>
      <property name="modifiersOrder" type="array">
        <!-- <element value="final"/> --> <!-- Unsupported in version 8.12.1 -->
        <element value="public, protected, private"/>
        <element value="static"/>
        <element value="readonly"/>
      </property>
      <property name="checkPromoted" value="true"/>
      <property name="enableMultipleSpacesBetweenModifiersCheck" value="true"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Classes.PropertySpacing"/>          <!-- Povolujeme properties hned pod sebou alebo aj oddelene riadkom -->
  <rule ref="SlevomatCodingStandard.Classes.RequireAbstractOrFinal"/>
  <rule ref="SlevomatCodingStandard.Classes.RequireConstructorPropertyPromotion"/>      <!-- Urcite chceme? -->
  <rule ref="SlevomatCodingStandard.Classes.RequireMultiLineMethodSignature">      <!-- Treba dohodnut -->
    <properties>
      <property name="minParametersCount" value="2"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Classes.RequireSelfReference"/>
  <rule ref="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming"/>
  <rule ref="SlevomatCodingStandard.Classes.SuperfluousErrorNaming"/>
  <rule ref="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming"/>
  <rule ref="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming"/>
  <rule ref="SlevomatCodingStandard.Classes.SuperfluousTraitNaming"/>   <!-- Tento by som asi povolil na rozdiel od tych zvysnych (su hned tu ^^^) -->
  <rule ref="SlevomatCodingStandard.Classes.TraitUseDeclaration"/>
  <rule ref="SlevomatCodingStandard.Classes.TraitUseSpacing">
    <properties>
      <property name="linesCountBeforeFirstUseWhenFirstInClass" value="0"/>
      <property name="linesCountAfterLastUseWhenLastInClass" value="0"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding"/>
  <rule ref="SlevomatCodingStandard.Commenting.AnnotationName"/>             <!-- Ma toto zmysel? -->
  <rule ref="SlevomatCodingStandard.Commenting.DeprecatedAnnotationDeclaration"/>
  <rule ref="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment"/>
  <rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing"/>
  <rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
  <rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">     <!-- autor uvadza aj dalsie obsolete a nepotrebne anotacie -->
    <properties>
      <property name="forbiddenAnnotations" type="array">
        <element value="@throws"/>
      </property>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration"/>
  <rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment"/>
  <rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment"/>
  <rule ref="SlevomatCodingStandard.Complexity.Cognitive"/>                   <!-- chceme checkovat komplexitu? -->
  <rule ref="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing">
    <properties>
      <property name="controlStructures" type="array">
        <element value="try"/>
        <element value="case"/>
        <element value="default"/>
      </property>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.DisallowEmpty"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.DisallowTrailingMultiLineTernaryOperator"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit">     <!-- neviem ako nastavit premenne -->
    <properties>
      <property name="ignoreStandaloneIfInScope" value="false"/>
      <property name="ignoreOneLineTrailingIf" value="false"/>
      <property name="ignoreTrailingIfWithOneInstruction" value="false"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing">           <!-- neviem ako nastavit premenne -->
    <properties>
      <property name="linesCountBefore" value="1"/>
      <property name="linesCountBeforeFirst" value="0"/>
      <property name="linesCountBeforeWhenFirstInCaseOrDefault" value="null"/>
      <property name="linesCountAfter" value="1"/>
      <property name="linesCountAfterLast" value="0"/>
      <property name="linesCountAfterWhenLastInCaseOrDefault" value="null"/>
      <property name="linesCountAfterWhenLastInLastCaseOrDefault" value="null"/>
      <property name="allowSingleLineYieldStacking" value="true"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceEqualOperator"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullSafeObjectOperator"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.RequireShortTernaryOperator"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.UselessIfConditionWithReturn"/>
  <rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator"/>
  <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>
  <rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly"/>
  <rule ref="SlevomatCodingStandard.Exceptions.RequireNonCapturingCatch"/>
  <rule ref="SlevomatCodingStandard.Files.LineLength">
    <properties>
      <property name="lineLengthLimit" value="120"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Functions.ArrowFunctionDeclaration">
    <properties>
      <property name="spacesCountAfterKeyword" value="0"/>
      <property name="allowMultiLine" value="true"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Functions.FunctionLength">     <!-- Chceme? -->
    <properties>
      <property name="maxLinesLength" value="20"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInCall"/>
  <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInClosureUse"/>
  <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInDeclaration"/>
  <rule ref="SlevomatCodingStandard.Functions.StaticClosure"/>
  <rule ref="SlevomatCodingStandard.Functions.StrictCall"/>
  <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure"/>
  <rule ref="SlevomatCodingStandard.Functions.UnusedParameter"/>
  <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
  <rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse"/>
  <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation"/>
  <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions"/>
  <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalConstants"/>
  <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions"/>
  <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine"/>
  <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration"/>
  <rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing"/>
  <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
    <properties>
      <property name="searchAnnotations" value="true"/>
      <property name="allowFullyQualifiedExceptions" value="true"/>
      <property name="allowFullyQualifiedGlobalClasses" value="true"/>
      <property name="allowFullyQualifiedGlobalFunctions" value="true"/>
      <property name="allowFullyQualifiedGlobalConstants" value="true"/>
      <property name="allowFallbackGlobalFunctions" value="false"/>
      <property name="allowFallbackGlobalConstants" value="false"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/>
  <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
    <properties>
      <property name="searchAnnotations" value="true"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
  <rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
  <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>
  <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing">
    <properties>
      <property name="linesCountBetweenUseTypes" value="1"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators"/>
  <rule ref="SlevomatCodingStandard.Operators.NegationOperatorSpacing"/>
  <rule ref="SlevomatCodingStandard.Operators.SpreadOperatorSpacing"/>
  <rule ref="SlevomatCodingStandard.PHP.DisallowDirectMagicInvokeCall"/>
  <rule ref="SlevomatCodingStandard.PHP.ReferenceSpacing"/>
  <rule ref="SlevomatCodingStandard.PHP.RequireExplicitAssertion">
    <properties>
      <property name="enableIntegerRanges" value="true"/>
      <property name="enableAdvancedStringTypes" value="true"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.PHP.RequireNowdoc"/>
  <rule ref="SlevomatCodingStandard.PHP.ShortList"/>
  <rule ref="SlevomatCodingStandard.PHP.TypeCast"/>
  <rule ref="SlevomatCodingStandard.PHP.UselessParentheses"/>
  <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>
  <rule ref="SlevomatCodingStandard.Strings.DisallowVariableParsing"/>
  <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
    <properties>
      <property name="spacesCountAroundEqualsSign" value="0"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax"/>
  <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>
  <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
  <rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition"/>
  <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint"/>
  <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
  <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint"/>
  <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint"/>
  <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
  <rule ref="SlevomatCodingStandard.TypeHints.UnionTypeHintFormat">
    <properties>
      <property name="withSpaces" value="yes"/>
      <property name="shortNullable" value="yes"/>
      <property name="nullPosition" value="last"/>
    </properties>
  </rule>
  <rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint"/>
  <rule ref="SlevomatCodingStandard.Variables.DisallowSuperGlobalVariable"/>
  <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>
  <rule ref="SlevomatCodingStandard.Variables.UnusedVariable"/>
  <rule ref="SlevomatCodingStandard.Variables.UselessVariable"/>
  <rule ref="SlevomatCodingStandard.Whitespaces.DuplicateSpaces"/>
</ruleset>
